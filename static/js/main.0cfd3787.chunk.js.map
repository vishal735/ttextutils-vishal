{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","upperText","toUpperCase","showAlert","lowerText","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","spacetxt","split","join","length","prototypes","PropTypes","string","isreqired","aboutText","defaultproptypes","Alert","alert","role","word","lower","charAt","slice","capitalize","message","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0cfd3787.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n       \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckChecked\"  />\r\n  <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckChecked\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\nNavbar.prototypes = {title : PropTypes.string.isreqired ,  \r\n                     aboutText : PropTypes.string}\r\n\r\nNavbar.defaultproptypes = {title : 'vishla.com',\r\n                           aboutText : 'vishalabout'}                     \r\n","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleupclick =() =>{\r\n        let upperText = text.toUpperCase();\r\n       \r\n        setText(upperText)\r\n        props.showAlert(\"Convert to uppercase successfully\",\"success\")\r\n    }\r\n    const handleonchange =(event) =>{\r\n        // console.log('uppercase was clicked')\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    const handlelowclick=() =>{\r\n        let lowerText = text.toLowerCase();\r\n        setText(lowerText)\r\n        props.showAlert(\"Convert to lowercase successfully\",\"success\")\r\n    }\r\n\r\n    const handleClearclick=()=>{\r\n        let clearText = \"\";\r\n        setText(clearText)\r\n        props.showAlert(\"Convert to cleartext successfully\",\"success\")\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        let text = document.getElementById('myBox')\r\n        text.select();\r\n        text.setSelectionRange(0,999);\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copy to clipboard\",\"success\")\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let spacetxt = text.split(/[ ]+/);\r\n        setText(spacetxt.join(' '))\r\n        props.showAlert(\"Remove extra speace succsessfully\",\"success\")\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container my-2\" style={{color:props.mode ==='dark'?'white':'black' }}>\r\n            <h1>{props.heading} </h1>\r\n            <div className=\"mb-3\">\r\n            \r\n               <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleonchange} style={{backgroundColor :props.mode ==='dark'?'grey':'white',color:props.mode==='light'?'black':'white'}}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleupclick}>Convert To UppwerCash</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handlelowclick}>Convert To LowerCash</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleClearclick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            \r\n            \r\n            \r\n        </div>\r\n        <div className=\"container\" style={{color:props.mode ==='dark'?'white':'black' }}>\r\n            <h1>let a text a summary</h1>\r\n            <p>{text.split(\" \").length} wrod and {text.length} character</p>\r\n            <p>{0.008*text.split(\" \").length} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length >0?text:'enter the something preview it here'}</p>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>:{props.alert.message}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport './App.css';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  \n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null)\n  \n\n  const showAlert = (message, type)=>{\n    setAlert({\n      message : message,\n      type : type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n\n    },2000);\n    \n\n\n  }\n\n\n  const toggleMode = ()=>{\n    if (mode === 'light'){\n      setMode ('dark')\n      document.body.style.backgroundColor='#062846d1';\n      showAlert(\"Darkmode has been enabled\",\"success\");\n    } \n    else {\n      setMode  ('light')\n      document.body.style.backgroundColor = '#f5d5d5';\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n  }\n  return (\n   <>\n   {/* <Router> */}\n<Navbar title='TextUtils' aboutText='about us' mode ={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch> */}\n          {/* <Route exect path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exect path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading='Enter Your Text Utilize' mode={mode}/>\n            \n          {/* </Route> */}\n        {/* </Switch> */}\n        \n</div>\n{/* </Router> */}\n   </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}